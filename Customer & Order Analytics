#In this SQL query, I'm analyzing a multi-table database to generate statistics related to customers and their orders.

#1 How many many unique orders were placed in January:
SELECT COUNT(DISTINCT orderid)
FROM BIT_DB.JanSales
WHERE LENGTH(orderid) = 6 AND orderid <> 'Order ID';

#2 How many of those orders were for an iPhone:
SELECT COUNT(DISTINCT orderid)
FROM BIT_DB.JanSales
WHERE Product = 'iPhone'
AND LENGTH(orderid) = 6
AND orderid <> 'Order ID';

#3 Select the customer account numbers for all the orders that were placed in February:
SELECT DISTINCT acctnum
FROM BIT_DB.customers cust
JOIN BIT_DB.FebSales feb ON cust.order_id = feb.orderid
WHERE LENGTH(orderid) = 6 AND orderid <> 'Order ID';

#4 Which product was the cheapest one sold in January, and what was the price:
SELECT DISTINCT product, price
FROM BIT_DB.JanSales
ORDER BY price ASC
LIMIT 1;

#5 What is the total revenue for each product sold in January:
SELECT product, SUM(quantity) * price AS revenue
FROM BIT_DB.JanSales
GROUP BY product;

#6 Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue:
SELECT product,
SUM(quantity) AS total_quantity,
SUM(quantity) * price AS revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

#7 How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers:
SELECT 
COUNT(DISTINCT cust.acctnum),
AVG(quantity * price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust ON Feb.orderid = cust.order_id
WHERE Feb.Quantity > 2
AND LENGTH(orderid) = 6
AND orderid <> 'Order ID';: '
